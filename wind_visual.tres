[gd_resource type="VisualShader" load_steps=7 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=3]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[resource]
code = "shader_type canvas_item;



void vertex() {
// Input:12
	vec3 n_out12p0;
	n_out12p0 = vec3(VERTEX,0.0);

// Input:7
	vec3 n_out7p0;
	n_out7p0 = vec3(VERTEX,0.0);

// Input:6
	float n_out6p0;
	n_out6p0 = TIME;

// VectorOp:9
	vec3 n_out9p0;
	n_out9p0 = n_out7p0 + vec3(n_out6p0);

// ScalarFunc:11
	float n_out11p0;
	n_out11p0 = sin(dot(n_out9p0,vec3(0.333333,0.333333,0.333333)));

// VectorOp:13
	vec3 n_out13p0;
	n_out13p0 = n_out12p0 + vec3(n_out11p0);

// Output:0
	VERTEX = n_out13p0.xy;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -329, 66.6 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 560, 120 )
nodes/vertex/6/node = SubResource( 4 )
nodes/vertex/6/position = Vector2( -320, 220 )
nodes/vertex/7/node = SubResource( 5 )
nodes/vertex/7/position = Vector2( -320, 160 )
nodes/vertex/9/node = SubResource( 6 )
nodes/vertex/9/position = Vector2( -160, 160 )
nodes/vertex/11/node = SubResource( 1 )
nodes/vertex/11/position = Vector2( 80, 160 )
nodes/vertex/12/node = SubResource( 2 )
nodes/vertex/12/position = Vector2( 80, 100 )
nodes/vertex/13/node = SubResource( 3 )
nodes/vertex/13/position = Vector2( 340, 120 )
nodes/vertex/connections = PoolIntArray( 7, 0, 9, 0, 6, 0, 9, 1, 9, 0, 11, 0, 11, 0, 13, 1, 12, 0, 13, 0, 13, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 440, 160 )
nodes/light/0/position = Vector2( 460, 180 )

